/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/assets/scripts/reports.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/assets/scripts/modules/reports/reports.js":
/*!*******************************************************!*\
  !*** ./app/assets/scripts/modules/reports/reports.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function () {\n  var ignoreHashChange,\n      ignoreTagAdd,\n      interceptCreateTag,\n      customTagAdded,\n      cannedReports,\n      selectize,\n      selectize2,\n      boxStatus,\n      datePickersActivated = false;\n  var tags = [];\n  var frequencyTagCounts = [];\n  var sort = 'alphabetical';\n  var filter = 'all';\n  var fidSuffix, trimmedTagCategories;\n  var frequencyMenu, frequencyButton; // start Mobile-Only\n\n  var heightMeasurement = window.innerHeight;\n  var scrollArea = heightMeasurement - 100;\n  var windowWidth = window.innerWidth; //var hideWidth = '-' + windowWidth + 'px';\n  // var subCategory = $('.g-filter-sub-category');\n  // end Mobile-Only\n  //console.log('The screen width is: ' + windowWidth);\n  // Fire this event after the DOM is ready to be operated on\n\n  $(document).ready(function () {\n    // set initial breadcrumb state - mobile only\n    //$('node-two').hide();\n    //$('node-thr').hide();\n    //document.getElementById('num-reports').className += \" load\";\n    $(\".report-count\").addClass(\"load\");\n    $('.overlay-button').click(function () {\n      $(\".overlay\").addClass('overlay-show'); // console.log('----------show-overlay---------');\n      // console.log('show back container but hide the back button');\n\n      $('.g-filters-back-button').show();\n      $('.g-filters-back-button > div').hide(); // console.log('show search label & hide container');\n\n      $('.g-search-tags').show();\n      $('.g-search-tags-container').hide(); // console.log('show a-z label');\n\n      $('.g-a-z-label .ui-button-text').text('A-Z');\n      $('.g-a-z-label').show(); // console.log('hide: az-index az-container');\n\n      $('.az-index').hide();\n      $('.az-container').hide(); // breadcrumb\n\n      $('.g-breadcrumb-container').hide(); // filters\n\n      $('.g-filter-by').css('display', 'block');\n      $('.g-filters-source').hide();\n      $('.g-filters-report').hide();\n      $('.g-filters-geography').hide();\n      $('.g-filters-topic').hide(); // console.log('slide panel hiddes');\n\n      $('.g-panel').css({\n        'margin-left': '-599px',\n        'display': 'block'\n      }); // tags\n      // console.log('hide second level tags');\n\n      $('.g-search-tags-container').hide(); //console.log('hide third level tags');\n      //$('.g-filter-sub-category').hide();\n      //.css('visibility', 'hidden');\n      // console.log('--------------end--------------');\n    });\n    $('.overlay-close').click(function () {\n      resetMobileOnly();\n    });\n    $(\"button#resetOne\").on('click', function resetHandler(event) {\n      event.preventDefault();\n      clearAllTags();\n      console.log('#1a Test if selected tags are visible.'); //checkSelectedTags();\n      //var reportFilters = $('#tags-holder[data-filter=report]');\n      //if (reportFilters == true) {\n      //\tconsole.log('reports is the category')\n      //} \n    });\n    $(\"button#resetTwo\").on('click', function resetHandler(event) {\n      event.preventDefault();\n      clearAllTags();\n      console.log('#1b Test if selected tags are visible.');\n      checkSelectedTags();\n    });\n    $('.g-filters-back-button > div').click(function () {\n      backButtonClicked();\n    });\n    /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n    /* ***** ***** ***  breadcrumb click functions *** ***** ***** */\n\n    /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n    $('.node-two').click(function () {\n      // console.log('----------node-two clicked----------');\n      // console.log('update breadcrumb');\n      $('.node-thr').text('');\n      $('.node-two').removeClass('g-breadcrumb').addClass('g-breadcrumb-active'); //$('.overlay-reports-title').hide();\n      //$('.overlay-selected-tags-container').hide();\n      // console.log('show tag container');\n\n      $('#tags-container').show(); // console.log('show categories');\n\n      $('#tag_categories').show();\n      $('#tag_categories .bookshelftags').css('display', ''); // console.log('hide tags');\n\n      $('#inner-tags-container').hide();\n      $('#tags').hide(); // console.log('--------------end--------------');\n    });\n    $('.node-one').click(function () {\n      // console.log('--breadcrumb node-one clicked--');\n      functionFilterByLinkClicked(); // console.log('--------------end--------------');\n    });\n    $('.g-filter-by').click(function () {\n      // console.log('-------filter-by clicked-------');\n      functionFilterByLinkClicked(); // console.log('--------------end--------------');\n    });\n    $('.g-search-tags').click(function () {\n      if (windowWidth <= 599) {\n        //console.log(\"Mobile-Only Search clicked.\");\n        searchButtonClicked();\n      }\n    });\n    $('.g-a-z-label').click(function () {\n      //console.log(\"Mobile-Only A-Z by report clicked.\");\n      if (windowWidth <= 599) {\n        aZButtonClicked();\n      }\n    });\n    $(window).resize(resetFilter);\n    $(window).load(resetFilter); // end Mobile-Only\n\n    frequencyMenu = $('#frequency-menu');\n    frequencyButton = $('#frequency-button'); // Attach events\n\n    $(\".g-filters-container  #filter-radio\").buttonset().on('change', filterChangeHandler);\n    $(\"#filter-radio label\").on('click', showHideTagSelection);\n    $(\"#tag_categories\").on('click', 'h5, h4', ctrlCategoryList); //\t\t$(\"div.tag_search_box\").on('click', '#tags-clear > a, #reset2-button', function resetHandler(event) {\n    //            event.preventDefault();\n    //            clearAllTags();\n    //\t    });\n    //$(\"div.tag_search_box .selected_tags\").on('click', 'div', function() {\n\n    $(\"div.selected-tags-container .selected_tags\").on('click', 'div', function () {\n      removeTag($(this).attr('data-value'));\n      console.log('#2 Test if selected tags are visible.');\n      checkSelectedTags();\n    });\n    $(\"a[id^='tbd']\").click(function (event) {\n      event.preventDefault();\n    });\n    $(\"div.az-list\").on('click', 'a', adjIndexTags);\n    $(\"#input-search\").on('keyup', handleSearchInput);\n    $(\"#tags-holder\").on('change', 'input[name=\"tag-input\"]', tagChangeHandler);\n    $(\"#tags_search .bookshelftags\").on('click', 'div', searchElementSelectedHandler);\n    $(\".top_input_box .tags_search\").hide();\n    $(\".top_input_box #input-search\").val(\"\");\n    $(\".top_input_box\").on('mouseleave', function () {\n      $(\".top_input_box .tags_search\").hide();\n      $(\"div.top_input_box #input-search\").val(\"\");\n    });\n    $(\"#more-options\").on('click', '#close', function () {\n      var input = $('input[name=\"filter\"]:checked');\n      input.prop('checked', false);\n      $(input.parent()).buttonset('refresh');\n      showTagOptions(false);\n    }); //$(\"span#reset\").on('click', function resetHandler(event) {\n\n    $(\"button#reset\").on('click', function resetHandler(event) {\n      event.preventDefault();\n      clearAllTags();\n    });\n    $(\"div.reports-container\").on('click', 'div.b_content > h3 > a', setRptPgRtn);\n    $(window).on('resize', movePointer);\n    ignoreHashChange = false;\n    ignoreTagAdd = false;\n    interceptCreateTag = false;\n    customTagAdded = false;\n    /*\r\n     * Save the canned reports either way, so we can display them if the subject is provided but suppressed\r\n     */\n\n    cannedReports = $(\"#reports-holder\").html(); //if (cannedReports.length < 40) {\n    //\twindow.console && console.log(\"WARNING: The canned reports length is only= \" + cannedReports.length);\n    //}\n\n    activateDatePickers(); // If the user selects a date using the datepicker plugin\n\n    $(\"#timeSeriesFormContainer\").on(\"change\", \"input#start-date,input#end-date\", dateChanged); // Initialize Hasher\n\n    hasher.separator = \",\";\n    hasher.initialized.add(hasherInit); //add initialized listener (to grab initial value in case it is already set)\n\n    hasher.changed.add(hasherChanged); //add hash change listener\n\n    hasher.init();\n\n    function positionFrequencyMenu() {\n      frequencyMenu.position({\n        'left': frequencyButton.position().left - frequencyMenu.outerWidth() + frequencyButton.outerWidth()\n      });\n    }\n\n    frequencyButton.on('click', function openFrequencyMenu(event) {\n      frequencyButton.toggleClass('open', true);\n\n      if (!frequencyMenu.is(':visible')) {\n        frequencyMenu.show();\n        positionFrequencyMenu();\n        $(window).on('resize', positionFrequencyMenu);\n        setTimeout(function () {\n          //$(window).reports-search('click', function(event) {\n          $(window).one('click', function (event) {\n            frequencyButton.toggleClass('open', false);\n            frequencyMenu.hide();\n            $(window).off('resize', positionFrequencyMenu);\n          });\n        }, 0);\n      }\n    });\n    frequencyMenu.on('change', function frequencySelected(event) {\n      setFrequencyButtonText();\n      frequencyButton.toggleClass('open', false);\n      frequencyMenu.hide();\n      $(window).off('resize', positionFrequencyMenu);\n    });\n    frequencyMenu.on('change', tagChangeHandler);\n    /* If no cookie was set, or the user has opened the tag options previously */\n\n    var showTagOptionsCookieValue = getCookie(\"SHOWTAGOPTIONS\"); // Hide tag options on page load\n\n    if (showTagOptionsCookieValue === null || showTagOptionsCookieValue !== 'false') {\n      var selectedFilter = $.cookie(\"lastFilter\") ? $.cookie(\"lastFilter\") : 'all';\n      var input = $('input[name=\"filter\"][value=\"' + selectedFilter + '\"]');\n      input.prop('checked', true);\n      $(input.parent()).buttonset('refresh');\n      movePointer();\n      showTagOptions(true);\n    } else {\n      showTagOptions(false);\n    } // When the user clicks a tag in the \"Analysis & Projections\", manually hide the entire menu since the page no longer reloads now that we're using Ajax\n\n\n    $(\"div.dat_block a\").click(function () {\n      $(\"li.dropdown.active.on\").removeClass(\"on\");\n      $(\"div.dat_block\").hide();\n    }); // Prevent the date form from submitting automatically\n\n    $('form#date-form').submit(function (e) {\n      e.preventDefault();\n    }); // If the user enters something into the start or end date fields\n\n    $(\"input#start-date,input#end-date\").on(\"keyup\", function (eventObject) {\n      dateTyped(eventObject);\n    });\n  }); // END of $(document).ready(function()\n  // ************************************************************************\n  // * HASHER FUNCTIONS - Initialization is above inside jQuery ready()\n  // ************************************************************************\n  // Make a tag available to be added (either through autocomplete, or when the user clicks on a suggested tag)\n\n  function filterReportsByFrequency(reports) {\n    var ret = [],\n        selectedFrequencies = [],\n        i,\n        hash_array = getCleanHashArray();\n    $.each(frequencyTags, function (key, value) {\n      if (hash_array.indexOf('T' + key.toString()) !== -1) {\n        selectedFrequencies.push(key.toString());\n      }\n    });\n\n    if (selectedFrequencies.length === 0) {\n      return reports;\n    }\n\n    function showReport(report) {\n      var showReport = false;\n      var tags = report.alltags.toString().split(', ');\n\n      for (var i = 0; i < selectedFrequencies.length; i++) {\n        if (selectedFrequencies[i] === \"-1\") {\n          showReport = true;\n          $.each(frequencyTags, function (key, value) {\n            if (tags.indexOf(key.toString()) !== -1) {\n              showReport = false;\n              return false;\n            }\n          });\n        } else {\n          if (tags.indexOf(selectedFrequencies[i]) > -1) {\n            showReport = true;\n            break;\n          }\n        }\n      }\n\n      return showReport;\n    }\n\n    for (i = 0; i < reports.length; i++) {\n      if (showReport(reports[i])) {\n        ret.push(reports[i]);\n      }\n    }\n\n    return ret;\n  }\n\n  function setFrequencyButtonText() {\n    var selectedInputs = $('input:checked', frequencyMenu);\n    var text = 'All available';\n\n    if (selectedInputs.length == $('input', frequencyMenu) || selectedInputs.length == 0) {\n      text = 'All available';\n    } else if (selectedInputs.length > 1) {\n      text = 'Multiple';\n    } else {\n      text = selectedInputs.val();\n      text = frequencyTags[text.substr(1)];\n      text = text.substr(0, 1).toUpperCase() + text.substr(1);\n    }\n\n    $('.text', frequencyButton).text(text);\n  }\n\n  function createTag(newTag, newID) {\n    interceptCreateTag = false; // Ignore if the tag ID no longer exists (or never did)\n\n    if (typeof newTag != \"undefined\") {\n      // Create the tag as an option in the Selectize plugin\n      addOption(newTag, newID);\n    }\n\n    interceptCreateTag = true;\n  } // END of createTag()\n\n\n  function addOption(value, data) {\n    if (interceptCreateTag) {\n      customTagAdded = true;\n    }\n  } // Add a tag that has already been created by createTag() above\n\n\n  function addTag(newID) {\n    var tagSelected = hasher.getHash().split(', ').indexOf(newID);\n\n    if (tagSelected == -1) {\n      addItem(newID);\n    }\n  }\n\n  function addItem(value) {\n    if (!ignoreTagAdd) {\n      // Google Analytics Event tracking\n      if (typeof _gaq !== 'undefined' && typeof _gaq.push === 'function') {\n        _gaq.push(['_trackEvent', 'Bookshelf report tagging', 'Tag added']);\n      }\n\n      var hash_array; // If getHash() has no elements, create an empty array\n\n      if (!hasher.getHash().length) {\n        // Create an empty array\n        hash_array = [];\n      } else {\n        hash_array = getCleanHashArray();\n      } // If onOptionAdd() above determined this is a custom tag (aka keyword), rather than being a subject or tag from the autocomplete\n      // if (interceptCreateTag && value.substring(1, 0) != \"S\" && value.substring(1, 0) != \"T\") {\n\n\n      if (customTagAdded) {\n        // Update the text and value to make it a keyword\n        var newText = \"Keyword: \" + this.options[value].text;\n        var newValue = \"K\" + this.options[value].value;\n        var data = $.extend({}, this.options[value], {\n          text: newText,\n          value: newValue\n        });\n        this.updateOption(value, data);\n        value = newValue; // Reset the variable now that processing is done\n\n        customTagAdded = false;\n      } // Update hasher\n\n\n      hash_array.push(value);\n      hasher.setHash(hash_array.toString());\n    }\n\n    setSelectedTags();\n  }\n\n  function removeTag(newID) {\n    interceptCreateTag = false;\n    removeItem(newID);\n    interceptCreateTag = true;\n  }\n\n  function defaultTagRemoved() {\n    var hash_array = getCleanHashArray();\n    hash_array.splice(hash_array.indexOf(L2tagId), 1);\n    window.location.href = '/reports/#' + hash_array.join(', ');\n  }\n\n  function removeItem(value) {\n    // Google Analytics Event tracking\n    if (typeof _gaq !== 'undefined' && typeof _gaq.push === 'function') {\n      _gaq.push(['_trackEvent', 'Bookshelf report tagging', 'Tag removed']);\n    }\n\n    var hash_array = getCleanHashArray(); // If there's just one item in the hash\n\n    if (hash_array.length == 1) {\n      clearAllTags();\n    } else {\n      // Remove from Hasher the one tag that was removed from the Selectize plugin\n      hash_array.splice(hash_array.indexOf(value), 1);\n      hasher.setHash(hash_array.toString());\n    }\n  }\n\n  function searchElementSelectedHandler(event) {\n    var tagId = $(this).attr('value');\n    $(\".top_input_box .tags_search\").hide();\n    $(\".top_input_box #input-search\").val(\"\");\n    addTag(tagId); //console.log('#3 Search Element Selected Handler - Test if selected tags are visible.');\n    //checkSelectedTags();\n  }\n\n  function tagChangeHandler(event) {\n    var tagId = $(event.target).val();\n    var checked = $(event.target).prop('checked');\n\n    if (checked) {\n      // console.log('add tag');\n      addTag(tagId);\n    } else {\n      removeTag(tagId); // console.log('remove tag');\n    }\n  } // Handle hash passed in\n\n\n  function hasherInit(newHash) {\n    //initialize hasher (start listening for history changes)\n    // Check if L2 page add L2tagId NOT in hash - add the L2tag to the hash\n    var hash_array = getCleanHashArray();\n\n    if (L2tagId.length !== 0 && hash_array.length === 0 && hash_array.indexOf(L2tagId) === -1) {\n      hash_array.push(L2tagId);\n      hasher.setHash(hash_array.join(', '));\n    } else {\n      // Call the server to update the reports and tags\n      ajaxCall();\n    }\n  } //handle hash changes\n\n\n  function hasherChanged(newHash, oldHash) {\n    /*if(L2tagId.length !== 0 && newHash.indexOf(L2tagId) === -1) {\r\n        defaultTagRemoved();\r\n    }*/\n    // console.log('hasher changed');\n    console.log('#9 hasher changed');\n    setTimeout(checkSelectedTags, 500);\n\n    if (!ignoreHashChange) {\n      setSelectedTags();\n      ajaxCall();\n    }\n  } // Called by handlers for the \"Filter by date range\" (\"date-form\") form\n\n\n  function filterByDates() {\n    var startDate = $(\"input#start-date\").val();\n    var endDate = $(\"input#end-date\").val(); // Use a regex to validate the start date (if not empty)\n\n    if (startDate && !/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(startDate)) {\n      alert(\"Please enter or select a valid start date (M/D/YYYY)\"); // Wait 1ms so that the datepicker can be reopened\n\n      setTimeout(function () {\n        // Refocus on start date field, which will open the datepicker\n        $(\"input#start-date\").trigger(\"focus\");\n      }, 1);\n      return false;\n    } // Use a regex to validate the start date (if not empty)\n\n\n    if (endDate && !/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(endDate)) {\n      alert(\"Please enter or select a valid end date (M/D/YYYY)\"); // Wait 1ms so that the datepicker can be reopened\n\n      setTimeout(function () {\n        // Refocus on start date field, which will open the datepicker\n        $(\"input#end-date\").trigger(\"focus\");\n      }, 1);\n      return false;\n    } // Remove any existing dates from hasher\n    // Iterate through the tags in hasher\n\n\n    var hash_array = getCleanHashArray();\n    var hash_array_temp = [],\n        hashType,\n        hashValue;\n\n    for (var oneHash = 0; oneHash < hash_array.length; oneHash++) {\n      hashType = hash_array[oneHash].substring(0, 1);\n      hashValue = hash_array[oneHash].substring(1); // If a start or end start date was already selected\n\n      if (hashType != \"B\" && hashType != \"E\") {\n        // Remove the start or end date from the hash\n        //hash_array.splice(hash_array.indexOf(hash_array[oneHash]), 1);\n        hash_array_temp.push(hash_array[oneHash]);\n      }\n    }\n\n    hash_array = hash_array_temp; // Add the new start and/or end dates to the URL hash\n\n    if (startDate) {\n      hash_array.push(\"B\" + startDate);\n    }\n\n    if (endDate) {\n      hash_array.push(\"E\" + endDate);\n    } // Update the hash with the results\n\n\n    hasher.setHash(hash_array.toString());\n  } // Called by \"Clear all\" link\n\n\n  function clearAllTags() {\n    $(\"input#start-date\").val(\"\");\n    $(\"input#end-date\").val(\"\");\n    $(\"#input-tags\").val(\"\");\n    hasher.setHash('/'); //console.log(\"CLEAR ALL TAGS\");\n\n    console.log('#4 CLEAR ALL TAGS - Test if selected tags are visible.'); //checkSelectedTags();\n  } // ************************************************************************\n  // * END HASHER FUNCTIONS\n  // ************************************************************************\n  // Convert milliseconds to seconds, and round to the tenths place\n\n\n  function getTenths(num) {\n    num = Math.round(num / 100) / 10; // Keep them all the same length\n\n    if (num.toString().length == 1) {\n      return num + \".0s\";\n    } else {\n      return num + \"s\";\n    }\n  }\n\n  function getCleanHashArray() {\n    var hashArray = hasher.getHashAsArray();\n\n    for (var i = hashArray.length - 1; i >= 0; i--) {\n      if (hashArray[i] === \"\") {\n        hashArray.splice(i, 1);\n      }\n    }\n\n    return hashArray;\n  } // Called by: hasherInit(), the \"Search for\" input field, and the associated \"Clear\" link\n\n\n  function ajaxCall() {\n    // Deactivate the UI\n    setUIActive(false); // Tell user the tags are being loaded\n\n    $(\"#tags-container\").removeClass(); //$(\"#tags-container\").toggleClass(\"loading\", false);\n\n    $(\"#tags-container\").toggleClass(\"loading\", true); // Remove the number of reports during the Ajax call\n    //$(\"#num-reports\").empty();\n\n    $(\".report-count\").empty(); // Tell user new tags and reports are currently loading\n\n    $(\"#reports-holder\").empty().append('<br><em>Loading reports ...</em><br><br>');\n    $('.reports-container').toggleClass('show-side', true); //$('.reports-container').toggleClass('show-side', true).removeClass('dilly');\n    // CFD - remove any keywords/tags from the new searchbox\n\n    $(\"#input-search\").empty(); //selectize.removeItem(newID);\n    // *************************************************************************\n    // *************************************************************************\n    // CLEAR THE SELECTIZE PLUGIN, AND RECREATE ALL ITEMS\n    // NOTE: THE CODE BELOW IS SOMEWHAT DUPLICATIVE SO THE ITEMS ARE IN A CERTAIN ORDER\n    // (SUBJECT, TAGS, KEYWORDS, AND START/END DATES)\n    // *************************************************************************\n    // *************************************************************************\n    // Prevent an infinite loop\n\n    ignoreTagAdd = true; // Get the hash array\n\n    var hash_array = getCleanHashArray();\n    var hashType, hashValue;\n    var realTags = '',\n        useKeywords = '',\n        useStartDate,\n        useEndDate;\n    $(\"input#start-date\").val(\"\");\n    $(\"input#end-date\").val(\"\"); // Iterate through the tags in hasher\n\n    for (var oneHash = 0; oneHash < hash_array.length; oneHash++) {\n      // Get the first character to determine the hash type\n      hashType = hash_array[oneHash].substring(0, 1);\n      hashValue = hash_array[oneHash].substring(1);\n\n      hashTypeSwitch: switch (hashType) {\n        case \"T\":\n          if (allAvailableTags[hashValue] !== undefined) {\n            // If a \"T\" is prepended, this is a real tag\n            // Create and add tags in the Selectize plugin for each one in hasher so the already selected tags can be displayed (additional tags will be created but not added below)\n            createTag(allAvailableTags[hashValue], \"T\" + hashValue); // Add the existing tag\n\n            addTag(hash_array[oneHash]); // Append this tag to the list\n\n            realTags += (realTags.length > 0 ? ', ' : '') + hashValue;\n          } else if (frequencyTags[hashValue] !== undefined) {\n            realTags += (realTags.length > 0 ? ', ' : '') + hashValue;\n          }\n\n          break hashTypeSwitch;\n        //B - Needed for beginning Date\n\n        case \"B\":\n          // If an \"B\" is prepended, this is a START DATE\n          useStartDate = hashValue;\n          createTag(\"Start date: \" + hashValue, \"B\" + hashValue); // Add the existing tag\n\n          addTag(hash_array[oneHash]);\n          $(\"input#start-date\").val(hashValue); //throw new Error();\n\n          break hashTypeSwitch;\n        //E - Needed for ending Date\n\n        case \"E\":\n          // If an \"B\" is prepended, this is an END DATE\n          useEndDate = hashValue;\n          createTag(\"End date: \" + hashValue, \"E\" + hashValue); // Add the existing tag\n\n          addTag(hash_array[oneHash]);\n          $(\"input#end-date\").val(hashValue);\n          break hashTypeSwitch;\n\n        default:\n          //window.console && console.log(\"WARNING: Unrecognized hash item: \" + hash_array[oneHash]);\n          break hashTypeSwitch;\n      }\n    }\n\n    ignoreTagAdd = false; // *************************************************************************\n    // *************************************************************************\n    // END: CREATE ALL TAGS AS OPTIONS, AND ADD ONLY THOSE THAT ARE CURRENTLY SELECTED\n    // *************************************************************************\n    // *************************************************************************\n    // *************************************************************************\n    // *************************************************************************\n    // MAKE AJAX CALL\n    // *************************************************************************\n    // *************************************************************************\n\n    var useData = {}; // Ignore if there is only a comma (Does this ever happen anymore? Keep just in case)\n\n    if (realTags.length > 1) {\n      useData.tags = realTags;\n    }\n\n    if (useKeywords.length) {\n      useData.keywords = useKeywords;\n    } // If a START DATE exists, pass it in\n\n\n    if (typeof useStartDate != \"undefined\") {\n      useData.startdate = useStartDate;\n    } // If an END DATE exists, pass it in\n\n\n    if (typeof useEndDate != \"undefined\") {\n      useData.enddate = useEndDate;\n    } // Initiate the Ajax call to the server\n\n\n    var jqHXR = $.ajax({\n      //url: \"/reports/index.php\",\n      url: \"/global/includes/bookshelf/index.php\",\n      dataType: 'json',\n      type: 'GET',\n      data: useData\n    }) // In case there's anything to do regardless of whether the Ajax call succeeds or fails\n    .always(function () {}) // If the Ajax call failed\n    .fail(function (jqXHR, textStatus, errorThrown) {\n      window.console && console.log(\"error, textStatus= \" + textStatus + \", errorThrown= \" + errorThrown); // Clear out the tags, and display error message\n\n      $(\"#tags-holder\").empty().append('<em>There was an error:</em><br><span style=\"color:#f00\"><strong>' + errorThrown + '</strong></span><br><span style=\"color:#f00\"><strong>' + jqHXR.responseText + '</strong></span>'); // Clear out any existing reports\n\n      $(\"#reports-holder\").empty();\n    }) // If the Ajax call completed successfully\n    .done(function (data, textStatus, jqHXR) {\n      tags = data.tags;\n      frequencyTagCounts = data.frequencyTags;\n      populateTrimmedTagCategories(); // Clear out any existing TAGS, so we can start over\n\n      if (!tags.length) {\n        $(\"#tags-container\").removeClass();\n        $(\"#tags-container\").toggleClass(\"no_tags\", true);\n      } else {\n        for (var i = 0; i < tags.length; i++) {\n          createTag(tags[i].label + \" (\" + tags[i].numreports + \")\", tags[i].identifier);\n        }\n\n        var curFilter = typeof $.cookie(\"lastFilter\") == 'string' ? $.cookie(\"lastFilter\").toLowerCase() : 'all'; // var curFilter =  'all'; \n\n        renderTags();\n      } // END of processing the tags\n\n\n      renderFrequencyTags(); // If \"reports\" did not exist in the JSON (happens on the all reports initial view, since no subject or tags are passed via Ajax)\n\n      if (typeof data.reports == \"undefined\") {\n        // Hide the title DIV\n        $(\"#reports-title h2\").hide(); // Hide the heading DIV\n\n        $(\"#reports-heading\").addClass('hidden'); // Reinstate the canned reports\n\n        $(\"#reports-holder\").empty().html(cannedReports);\n        $('.reports-container').toggleClass('show-side', false); // Show the canned reports (hidden on page load in case they won't get displayed)\n        //$(\".main_col\").show(); <-- this class name is not used in new styles\n\n        $('.no-results').show(); // Otherwise \"reports\" exists in the JSON (but could be empty)\n      } else {\n        // Get the reports in JSON format\n        var reportsJSON = filterReportsByFrequency(data.reports); // Hide the title DIV\n\n        $(\"#reports-title h2\").show(); // Make sure the heading DIV is visible\n\n        $(\"#reports-heading\").removeClass('hidden');\n        $(\"#timeSeriesFormContainer\").removeClass('hidden'); // Clear out any existing REPORTS, so we can start over\n\n        $(\"#reports-holder\").empty();\n\n        if (!reportsJSON.length) {\n          $(\"#reports-holder\").append('<br><em>No reports to display</em><br><br>');\n        } else {\n          reportsJSON.sort(function (a, b) {\n            var b_rd = Date.parse(b.release_date);\n            var a_rd = Date.parse(a.release_date);\n            if (b_rd == a_rd) return 0;\n            if (b_rd < a_rd) return -1;\n            if (b_rd > a_rd) return 1;\n          }); // Iterate through all the REPORTS returned by the server\n\n          for (var oneReport = 0; oneReport < reportsJSON.length; oneReport++) {\n            $(\"#reports-holder\").append(formatReport(reportsJSON[oneReport]));\n          }\n        } // END if (reportsJSON.length)\n        // Update the number of reports\n        //$(\"#num-reports\").empty().append('Results (' + reportsJSON.length + ')');\n\n\n        $(\".report-count\").empty().append('Results (' + reportsJSON.length + ')'); // Click handler for the newly generated \"(archived versions)\" links\n\n        $(\".arc\").click(function () {\n          $(this).parent().next('.grey_side').toggle();\n        });\n      } // End of processing the reports\n      // Remove the overlay that blocks the user from interacting with anything\n\n\n      setUIActive(true);\n    }); // END of jqHXR.done();\n    // *************************************************************************\n    // END: MAKE AJAX CALL\n    // *************************************************************************\n  } // END of ajaxCall()\n  // Called by ajaxCall(), jqHXR.done(), and clearAllTags()\n\n\n  function setUIActive(toggle) {\n    if (toggle) {\n      // Remove the cover that prevents the user from interacting with the UI during the Ajax call\n      $(\"#cover-everything\").remove();\n    } else {\n      // Cover the entire page during Ajax call to prevent user from interacting with the UI\n      $(\"body\").append('<div id=\"cover-everything\" style=\"position:fixed; top:0; left:0; height: 100%; width: 100%; margin: 0; padding: 0; background: #000000; opacity: .15; filter: alpha(opacity=15); -moz-opacity: .15; z-index: 101;\"></div>');\n    }\n  } // Check whether a variable is defined, not null, and has a length\n\n\n  function isDisplayable(theVar) {\n    return typeof theVar != \"undefined\" && theVar != null && theVar.length > 0;\n  } // END of isDisplayable()\n  // Helper function to get a cookie value\n\n\n  function getCookie(name) {\n    var re = new RegExp(name + \"=([^;]+)\");\n    var value = re.exec(document.cookie);\n    return value != null ? value[1] : null;\n  } // format a single report for display\n\n\n  function formatReport(report) {\n    var reportElement = $('<div></div>').addClass('b_content');\n    var reportTitle = $('<h3></h3>'); // Only create a LINK if one exists\n\n    if (isDisplayable(report.link_html)) {\n      $('<a></a>').attr('href', report.link_html).text(report.title).appendTo(reportTitle);\n    } else {\n      reportTitle.text(report.title);\n    }\n\n    if (isDisplayable(report.report_number)) {\n      $('<em></em>').text('(' + report.report_number + ')').appendTo(reportTitle);\n    }\n\n    reportTitle.append(formatReportID(report));\n    reportElement.append(reportTitle); // Only display the DATE if it exists, and is not null\n\n    if (isDisplayable(report.release_date)) {\n      // ColdFusion provides the date in a format meant for JavaScript's Date() function\n      var dateObject = new Date(report.release_date); // Dates in 2028 are designed to keep the report at the top, but should not be displayed\n\n      if (dateObject.getFullYear() > 2027) {//window.console && console.log(\"Ignoring ridiculous date: \" + dateObject);\n      } else {\n        // Format the date\n        var dateElement = $('<h4></h4>').addClass('dat bookshelf').text(formatDate(dateObject));\n        reportElement.append(dateElement);\n      }\n    } // Only display the DESCRIPTION if it exists, and is not null\n\n\n    if (isDisplayable(report.summary_descript)) {\n      $('<p></p>').addClass('desc').text(report.summary_descript).appendTo(reportElement);\n    } // Only display an HTML or PDF link exists\n\n\n    if (isDisplayable(report.link_html) || isDisplayable(report.link_pdf)) {\n      var reportFormatElement = $('<p></p>').addClass('report_format').append($('<em></em>').text('Available formats: '));\n\n      if (isDisplayable(report.link_html)) {\n        reportFormatElement.append($('<a></a>').addClass('ico html').attr('href', report.link_html).html('<span>HTML</span>'));\n\n        if (isDisplayable(report.link_pdf)) {\n          reportFormatElement.append('&nbsp;&nbsp;|&nbsp;&nbsp;');\n        }\n      }\n\n      if (isDisplayable(report.link_pdf)) {\n        reportFormatElement.append($('<a></a>').addClass('ico_pdf').attr('href', report.link_pdf).html('PDF'));\n      }\n\n      reportElement.append(reportFormatElement);\n    } // Add icons for Data, Analysis and Projections\n\n\n    if (isDisplayable(report.has_data) && report.has_data == \"Y\" || isDisplayable(report.has_forecast) && report.has_forecast == \"Y\" || isDisplayable(report.has_analysis) && report.has_analysis == \"Y\") {\n      var reportTypeElement = $('<p></p>').addClass('report_type').append($('<em></em>').text('Report type: '));\n\n      if (isDisplayable(report.has_data) && report.has_data == \"Y\") {\n        reportTypeElement.append($('<span></span>').addClass('report-contents has-data').attr('title', 'Includes Data').html('D'));\n      }\n\n      if (isDisplayable(report.has_forecast) && report.has_forecast == \"Y\") {\n        reportTypeElement.append($('<span></span>').addClass('report-contents has-projections').attr('title', 'Includes Projections').html('P'));\n      }\n\n      if (isDisplayable(report.has_analysis) && report.has_analysis == \"Y\") {\n        reportTypeElement.append($('<span></span>').addClass('report-contents has-analysis').attr('title', 'Includes Analysis').html('A'));\n      }\n\n      reportElement.append(reportTypeElement);\n    } // Only display all the tags associated with this report if at least one exists, and are not null (It's a convenient coincidence that the number 0 (for the tag \"All\") is considered to have no length)\n\n\n    if (isDisplayable(report.alltags)) {\n      var tagsElement = $('<p></p>').addClass('tags').append($('<em></em>').text(\"Tags: \")); // Create an array from the list of all tags\n\n      var allTags_array = report.alltags.toString().split(', ');\n      var first = true; // Iterate through all the tags for this report\n\n      for (var oneTag = 0; oneTag < allTags_array.length; oneTag++) {\n        // Ignore the \"All\" tag (Can this be safely done on the server-side?)\n        if (allTags_array[oneTag] == 0) continue; // Display the tag\n\n        if (!first) {\n          tagsElement.append(', ');\n        }\n\n        tagsElement.append(formatTag(allTags_array[oneTag], report.id));\n        first = false;\n      }\n\n      reportElement.append(tagsElement);\n    }\n\n    return reportElement;\n  }\n\n  function formatTag(tag, reportID) {\n    var tagElement = $('<a></a>').attr('href', '#/T' + tag);\n    var filterTagsList = hasher.getHash();\n    var tagText = isDisplayable(allAvailableTags[tag]) ? allAvailableTags[tag] : isDisplayable(frequencyTags[tag]) ? frequencyTags[tag] : tag;\n    tagElement.text(tagText).toggleClass('selected', filterTagsList.search('T' + tag) > -1);\n    return tagElement;\n  } // Called by the \"more-tab\" click handler below, and also on initial page load below\n\n\n  function showTagOptions(newSetting) {\n    // set cookie for whether the tag selection menu is visible or collapsed\n    $.cookie(\"SHOWTAGOPTIONS\", newSetting);\n\n    if (windowWidth > 599) {\n      if (newSetting) {\n        $(\"#more-options\").stop().slideDown(500);\n      } else {\n        $(\"#more-options\").stop().slideUp(500);\n        $(\".g-filters-pointer\").addClass('hide');\n      }\n    }\n  } // Called by on() keyup immediately above\n\n\n  function dateTyped(eventObject) {\n    if (eventObject.keyCode == 13) {\n      dateChanged();\n    }\n  }\n\n  function activateDatePickers() {\n    // Activate the jQuery UI datepicker widget\n    $(\"input#start-date.datepicker\").datepicker({\n      dateFormat: 'm/d/yy',\n      defaultDate: '1/1/#DateFormat(Now(), \"yyyy\")#'\n    });\n    $(\"input#end-date.datepicker\").datepicker({\n      dateFormat: 'm/d/yy'\n    });\n  } // Called by both dateTyped() and on() change above\n\n\n  function dateChanged() {\n    filterByDates();\n  }\n\n  function formatDate(dateObject) {\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return months[dateObject.getMonth()] + \" \" + dateObject.getDate() + \", \" + dateObject.getFullYear();\n  }\n\n  function filterChangeHandler(event) {\n    var input = $(event.target);\n\n    if (input.is(\":checked\")) {\n      filter = $(event.target).val();\n      $('#tags-holder').attr('data-filter', filter);\n      $.cookie(\"lastFilter\", filter);\n      movePointer();\n      renderTags(filter);\n      showTagOptions(true);\n    } else {\n      $.cookie(\"lastFilter\", null);\n    }\n  }\n\n  function showHideTagSelection(event) {\n    var input = $('input#' + $(event.currentTarget).attr('for'));\n\n    if (input.is(':checked')) {\n      event.preventDefault();\n      showTagOptions(false);\n      input.prop('checked', false);\n      $(input.parent()).buttonset('refresh');\n    } else {\n      showTagOptions(true);\n    }\n  }\n\n  function movePointer() {\n    var selectedFilter = $('input[name=\"filter\"]:checked');\n\n    if (selectedFilter.length > 0) {\n      var filter = selectedFilter.val();\n      filter = filter.replace(' ', ''); // console.log(filter);\n\n      $(\".g-filters-pointer\").removeClass('hide');\n\n      if (filter != 'all') {\n        var pointerPosition = $(\".g-filters-\" + filter + \".ui-button.ui-widget.ui-state-default.ui-button-text-only.ui-state-active\").position();\n        var pp_left = pointerPosition.left + $(\".g-filters-\" + filter + \".ui-button.ui-widget.ui-state-default.ui-button-text-only.ui-state-active\").innerWidth() / 2 - 50;\n      } else {\n        var pointerPosition = $(\".g-search-tags.g-filter-all.ui-button.ui-widget.ui-state-default.ui-button-text-only.ui-state-active\").position();\n        var pp_left = pointerPosition.left + $(\".g-search-tags.g-filter-all.ui-button.ui-widget.ui-state-default.ui-button-text-only.ui-state-active\").innerWidth() / 2 - 50;\n      }\n\n      var pp_top = pointerPosition.top;\n      $(\".g-filters-pointer\").css(\"left\", pp_left);\n      $(\".g-filters-pointer\").css(\"top\", Math.round(pp_top) + 107); //          var pointerPosition = $(\".g-filters-\"+filter).position();\n      //\t\t\t$(\".g-filters-pointer\").css(\"left\", pointerPosition.left+ $(\".g-filters-container .ui-buttonset .g-filters-\"+filter).innerWidth()/2-25);\n      //\t\t\t$(\".g-filters-pointer\").css(\"top\", Math.round(pointerPosition.top)+107);\n    }\n  }\n\n  function renderFrequencyTags() {\n    var frequencyMenu = $('#frequency-menu > ul');\n    frequencyMenu.empty();\n\n    for (var i = 0; i < frequencyTagCounts.length; i++) {\n      frequencyMenu.append(createTagElement(frequencyTagCounts[i]));\n    }\n\n    setFrequencyButtonText();\n  }\n\n  function renderTags() {\n    var filterInput = $('input[name=filter]:checked');\n\n    if (filterInput.length == 0) {\n      return;\n    }\n\n    var filter = filterInput.val();\n    $('#tags-holder').attr('data-filter', filter);\n    $(\"#num-tags\").removeClass();\n    $(\"#num-tags\").addClass(filter);\n    $(\".inner-tags-container\").attr('data-filter', filter);\n\n    switch (filter) {\n      case 'all':\n        renderAllTags();\n        break;\n\n      case 'source':\n        renderHierarchicalTags('Source');\n        break;\n\n      case 'report':\n        renderHierarchicalTags('Report');\n        break;\n\n      case 'geography':\n        renderHierarchicalTags('Geography');\n        break;\n\n      case 'report':\n        renderHierarchicalTags('Report');\n        break;\n\n      case 'topic':\n        renderHierarchicalTags('Topic');\n        break;\n    }\n\n    movePointer();\n\n    if (filter == \"all\") {\n      $(\"#tags\").removeClass('tag_category_tags');\n      $(\"#tags\").show(); //$(\"#tag_categories\").hide();\n\n      $(\"#tag_categories\").hide();\n      $('.top_input_box').show(); // added for mobile only\n\n      if (windowWidth > 599) {\n        $('.az-index').show();\n        $('.az-container').show();\n      }\n\n      $(\"div.az-list > a.active\").click();\n    } else if (filter == \"report\") {\n      $('.top_input_box').hide();\n      $('.az-index').hide();\n      $('.az-container').hide(); //$(\"#tag_categories\").hide();\n\n      $(\"#tag_categories\").css('border', '3px solid orange');\n      $(\"#tags\").removeClass('tag_category_tags');\n      $(\"#tags\").show();\n      $(\"#tags-container #tags-holder #tags > ul li.hierarchical:eq(1)\").hide();\n    } else {\n      $('.top_input_box').hide();\n      $('.az-index').hide();\n      $('.az-container').hide();\n      $(\"#tag_categories .bookshelftags > li > ul > li\").remove();\n      $(\"#tag_categories ul.bookshelftags > li > h4\").remove(' related tags'); //$(\"#tag_categories\").show();\n\n      $(\"#tag_categories\").show();\n      $(\"#tags ul.bookshelftags > li\").hide();\n      $(\"#tags\").addClass('tag_category_tags');\n      $(\"#tags\").hide();\n      setLastCatDspy(filter);\n    }\n\n    setSelectedTags();\n  }\n\n  function setSelectedTags() {\n    var filterTagsList = hasher.getHash();\n    var selectedTagsArray = filterTagsList.split(\",\");\n    var sltdTagName = '',\n        i,\n        j;\n    $('#tags [name=\"tag-input\"]').prop('checked', false);\n    $('.selected_tags').empty();\n\n    for (var i = 0; i < selectedTagsArray.length; i++) {\n      var isNotFrequency = !frequencyTags[selectedTagsArray[i].substr(1)];\n\n      if (selectedTagsArray[i].length > 1 && isNotFrequency) {\n        $('#tags [name=\"tag-input\"]').filter(\"[value='\" + selectedTagsArray[i] + \"']\").prop('checked', true);\n\n        if (selectedTagsArray[i].substr(0, 1) == 'B') {\n          $('.selected-tags-container .selected_tags').append(\"<div data-value=\" + selectedTagsArray[i] + \" class='item'>After \" + selectedTagsArray[i].substr(1) + \"&nbsp;<a href='javascript:void(0)' class='remove' tabindex='-1' title='Remove'></a></div>\");\n        } else if (selectedTagsArray[i].substr(0, 1) == 'E') {\n          $('.selected-tags-container .selected_tags').append(\"<div data-value=\" + selectedTagsArray[i] + \" class='item'>Before \" + selectedTagsArray[i].substr(1) + \"&nbsp;<a href='javascript:void(0)' class='remove' tabindex='-1' title='Remove'></a></div>\");\n        } else if (selectedTagsArray[i].substr(0, 1) !== 'T') {\n          $('.selected-tags-container .selected_tags').append(\"<div data-value=\" + selectedTagsArray[i] + \" class='item'>\" + selectedTagsArray[i] + \"&nbsp;<a href='javascript:void(0)' class='remove' tabindex='-1' title='Remove'></a></div>\");\n        } else {\n          sltdTagName = '';\n\n          for (var j = 0; j < tags.length; j++) {\n            if (tags[j].identifier == selectedTagsArray[i]) {\n              sltdTagName = tags[j].label;\n            }\n          }\n\n          if (sltdTagName !== '') {\n            $('.selected-tags-container .selected_tags').append(\"<div data-value=\" + selectedTagsArray[i] + \" class='item'>\" + sltdTagName + \"&nbsp;<a href='javascript:void(0)' class='ico cancel' tabindex='-1' title='Remove'></a></div>\");\n          }\n        }\n      }\n    }\n  }\n\n  function createTagElement(tag) {\n    var li,\n        input,\n        label,\n        tagItemContainer,\n        a,\n        tagSpan,\n        span,\n        selectedTags = getCleanHashArray();\n    li = $('<li></li>').addClass('tag-item');\n    input = $('<input></input>').addClass('checkbox-custom').attr({\n      'name': 'tag-input',\n      'value': tag.identifier,\n      'id': tag.identifier,\n      'type': 'checkbox'\n    }).prop({\n      'checked': selectedTags.indexOf(tag.identifier) > -1,\n      'disabled': tag.numreports === 0\n    });\n    label = $('<label>').attr('for', tag.identifier).addClass('checkbox-custom-label');\n    tagItemContainer = $('<span></span>').addClass('tag-item-container');\n    a = $('<a></a>').data(\"identifier\", tag.identifier).text(tag.label);\n    tagSpan = $('<a class=\"disabled\"></a>').data(\"identifier\", tag.identifier).text(tag.label);\n    span = $('<span></span>').addClass('instances').text(tag.numreports !== null ? '(' + tag.numreports + ')' : '');\n    li.append(input).append(label.append(tagItemContainer.append(tag.numreports > 0 ? a : tagSpan).append(span)));\n    return li;\n  } ////////////////////////////////////////\n  // All Tags Button\n  ////////////////////////////////////////\n\n\n  function renderAllTags() {\n    var tag_container = $(\"#inner-tags-container .bookshelftags\");\n    $(\"#tags-container\").toggleClass('loading', false);\n    tag_container.empty();\n\n    for (var i = 0; i < tags.length; i++) {\n      var tagId = tags[i].identifier.substr(1);\n\n      if (allAvailableTags[tagId]) {\n        tag_container.append(createTagElement(tags[i]));\n      }\n    }\n\n    $(\"#num-tags\").text('All tags');\n  }\n\n  function renderHierarchicalTags(filterType) {\n    var tag_container = $(\"#tags-holder .bookshelftags\");\n    $(\"#tags-container\").toggleClass('loading', false);\n    tag_container.empty();\n    var category_keyArray = Object.keys(trimmedTagCategories[filterType]).sort(function (a, b) {\n      if (filterType == 'Report') {\n        return a < b ? 1 : a > b ? -1 : 0;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    var category, item, li, sub_ul, sub_keyArray, a_test, b_test, sub_item, sub_li, subsub_ul, subsub_keyArray, i, j, k, itemNumRpts;\n    var totalTags = 0;\n\n    for (k = 0; k < category_keyArray.length; k++) {\n      category = category_keyArray[k];\n      item = trimmedTagCategories[filterType][category];\n      var categoryId = category.replace(/\\ /g, '-');\n      var newCategoryId = categoryId.replace(/\\-\\/\\-/, '-');\n      categoryId = newCategoryId.replace(/\\-\\+\\-/, '-');\n      newCategoryId = categoryId.replace(/\\./g, '');\n      categoryId = newCategoryId.replace(/-$/, '');\n      li = $('<li></li>').addClass('tag-item hierarchical').html('<h4 data-category=\"' + categoryId.toLowerCase() + '\">' + category + '</h4>');\n      sub_ul = $('<ul id=\"' + filterType + '\"></ul>');\n      sub_keyArray = Object.keys(item).sort(function (a, b) {\n        a_test = item[b].label !== undefined && (item[a].label === undefined || item[a].label.toLowerCase() > item[b].label.toLowerCase());\n        b_test = item[a].label !== undefined && (item[b].label === undefined || item[a].label.toLowerCase() < item[b].label.toLowerCase());\n        return a_test ? 1 : b_test ? -1 : 0;\n      });\n\n      for (i = 0; i < sub_keyArray.length; i++) {\n        sub_item = item[sub_keyArray[i]];\n        sub_li = $('<li></li>').addClass('tag-item related');\n\n        if (typeof sub_item.numreports !== 'undefined') {\n          // if no sub-sub-category, this sub_item is a tag\n          sub_li = createTagElement(sub_item);\n        } else {\n          // has sub-sub category\n          subsub_ul = $('<ul id=\"' + filterType + '\"></ul>');\n          subsub_keyArray = Object.keys(sub_item).sort(function (a, b) {\n            a_test = sub_item[a].label.toLowerCase() > sub_item[b].label.toLowerCase();\n            b_test = sub_item[a].label.toLowerCase() < sub_item[b].label.toLowerCase();\n            return a_test ? 1 : b_test ? -1 : 0;\n          });\n\n          for (j = 0; j < subsub_keyArray.length; j++) {\n            subsub_ul.append(createTagElement(sub_item[subsub_keyArray[j]]));\n          }\n\n          sub_li.html('<h4>' + sub_keyArray[i] + '</h4>').append(subsub_ul);\n        }\n\n        totalTags++;\n        sub_ul.append(sub_li);\n      }\n\n      li.append(sub_ul);\n      tag_container.append(li);\n    }\n\n    $(\"#num-tags\").text(filterType);\n    /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n    /* ***** ***** ***** mobile only breadcrumb  ***** ***** ***** */\n\n    /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n    $('.g-filters-source').click(function () {\n      if (windowWidth <= 599) {\n        // console.log('--------fuel source clicked--------');\n        sharedLabelClicked(); //$('#tag_categories').hide();\n      }\n    });\n    $('.g-filters-report').click(function () {\n      if (windowWidth <= 599) {\n        // console.log('--------reports clicked--------');\n        reportLabelClicked();\n      }\n    });\n    $('.g-filters-geography').click(function () {\n      if (windowWidth <= 599) {\n        // console.log('--------geography clicked--------');\n        sharedLabelClicked(); //$('#tag_categories').hide();\n      }\n    });\n    $('.g-filters-topic').click(function () {\n      if (windowWidth <= 599) {\n        // console.log('--------topic clicked--------');\n        sharedLabelClicked(); //$('#tag_categories').hide();\n      }\n    });\n  }\n\n  function populateTrimmedTagCategories() {\n    var validTagIds = [];\n    trimmedTagCategories = $.extend(true, {}, tagCategories);\n\n    for (var i = 0; i < tags.length; i++) {\n      validTagIds.push(parseInt(tags[i].identifier.substring(1)));\n    }\n\n    function trimObject(obj, level) {\n      var indexOfTag;\n      var deleteKey;\n\n      for (var i in obj) {\n        if (_typeof(obj[i]) === 'object') {\n          deleteKey = trimObject(obj[i], level + 1);\n\n          if (deleteKey && level > 0) {\n            delete obj[i];\n          }\n        } else {\n          indexOfTag = validTagIds.indexOf(parseInt(i));\n\n          if (indexOfTag === -1) {\n            delete obj[i];\n          } else {\n            obj[i] = tags[indexOfTag];\n          }\n        }\n      }\n\n      return Object.keys(obj).length === 0;\n    }\n\n    trimObject(trimmedTagCategories, 0);\n  }\n\n  function setRptPgRtn() {\n    $.cookie(\"lastTop\", $(this).parent().position().top);\n  } // hide or show tags based on the a-z index\n\n\n  function adjIndexTags(event) {\n    event.preventDefault();\n    $(\"div.az-list .active\").removeClass();\n    var adjMax = $(\"#tags a\").length;\n    var adjAlpha = event.target.text.toLowerCase();\n\n    for (var k = 0; k < adjMax; k++) {\n      var tagAlpha = $(\"#tags .tag-item-container a:eq(\" + k + \")\").text().toLowerCase().substring(0, 1);\n      var hideTag = adjAlpha !== tagAlpha || adjAlpha === \"xyz\" && (tagAlpha === \"x\" || tagAlpha === \"y\" || tagAlpha === \"z\");\n      $(\"#tags .bookshelftags .tag-item:eq(\" + k + \")\").toggleClass('hidden', hideTag);\n    }\n\n    $(this).addClass('active');\n  } // sets a cookie to preserve the last category that was displayed\n\n\n  function setLastCatDspy(filter) {\n    var lastState = 'lastCatIdx_' + filter.toLowerCase();\n    var curCatIdx = typeof $.cookie(lastState) == 'string' ? $.cookie(lastState) : 0;\n    var categoryId = $(\"#tags ul.bookshelftags > li:eq(\" + curCatIdx + \") h4\").attr('data-category');\n    $(\"#tags\").attr('data-category', categoryId);\n    $(\"#tag_categories h4[data-category]\").removeClass('active');\n    $(\"#tag_categories h4[data-category=\" + categoryId + \"]\").addClass('active');\n    $(\"#tags ul.bookshelftags > li:eq(\" + curCatIdx + \")\").show();\n    $(\"#tags\").show();\n  }\n\n  function ctrlCategoryList() {\n    var curCatIdx = $(this).parent().index();\n    var curCTRL = $(this).css('transform');\n    var lastState = 'lastCatIdx_' + $(this).next().attr('id').toLowerCase();\n    $.cookie(lastState, curCatIdx);\n    $(\"#tags ul.bookshelftags > li\").hide();\n    $(\"#tag_categories h4[data-category]\").removeClass('active');\n\n    if (curCTRL == \"none\") {\n      $(this).addClass('active');\n      $(\"#tags\").attr('data-category', $(this).attr('data-category'));\n      $(\"#tags ul.bookshelftags > li:eq(\" + curCatIdx + \")\").show();\n    } else {\n      $(\"#tags ul.bookshelftags > li:eq(\" + curCatIdx + \")\").hide();\n    }\n    /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n    /* ***** ***** ***** ***** mobile only ***** ***** ***** ***** */\n\n    /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n\n    if (windowWidth <= 599) {\n      mobileOnly();\n    }\n  }\n\n  function handleSearchInput() {\n    var srchStr = $(\"#input-search\").val().toLowerCase();\n    var filterTagsList = getCleanHashArray();\n    var searchArray = tags;\n    $('#tags_search .bookshelftags').empty();\n\n    for (var t = 0; t < searchArray.length; t++) {\n      var initCap = searchArray[t].label.substring(0, 1);\n      var remDsc = searchArray[t].label.substring(1, tags[t].label.length);\n      var fullDsc = searchArray[t].label.toLowerCase();\n      var srchTag = searchArray[t].identifier;\n\n      if (fullDsc.search(srchStr) == 0 && filterTagsList.indexOf(srchTag) == -1) {\n        $('#tags_search .bookshelftags').append(\"<div name=\\\"tag-input\\\" value=\" + tags[t].identifier + \" data-selectable class=\\\"option\\\"><span class=\\\"highlight\\\">\" + initCap + \"</span>\" + remDsc + \"</div>\");\n      }\n    }\n\n    $(\".tags_search\").show();\n  }\n\n  function checkSelectedTags() {\n    var numberOfTags = $('#selectedTags div').length;\n\n    if (numberOfTags > 0) {\n      $('.selected-tags-container').show();\n      console.log('Yes, ' + numberOfTags + ' selected tags are visible.');\n\n      if (windowWidth > 599) {\n        $('.overlay-selected-tags-container').hide();\n      }\n    } else {\n      $('.selected-tags-container').hide();\n      console.log('No, ' + numberOfTags + ' selected tags are visible.');\n    }\n  }\n\n  function resetFilter() {\n    if (windowWidth > 599) {\n      // console.log('-------tablet < detected-------');\n      // console.log('Onload or screen resolution change. The screen width is: ' + windowWidth + ' or tablet or greater');\n      // console.log('show filters');\n      $('.g-filters-source').show();\n      $('.g-filters-report').show();\n      $('.g-filters-geography').show();\n      $('.g-filters-topic').show(); // console.log('remove show/hide state from: #tags-container and .inner-tags-container');\n\n      $('#tags-container').css('display', '');\n      $('#inner-tags-container').css('display', '');\n      $('#tags').css('display', '');\n      console.log('#10a Reset Filter'); //setTimeout(checkSelectedTags, 500)\n      // console.log('--------------end--------------');\n    } else if (windowWidth <= 599) {\n      // console.log('Onload or screen resolution change. The screen width is: ' + windowWidth + ' or Mobile-Only');\n      resetMobileOnly();\n      console.log('#10b Reset Filter');\n      setTimeout(checkSelectedTags, 500);\n    }\n  }\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** *****    Reset Mobile-Only    ***** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n\n  function resetMobileOnly() {\n    //console.log(\"Reset Mobile-Only function fired\")\n    $(\".overlay\").removeClass('overlay-show');\n    console.log('#5 Test if selected tags are visible.');\n    checkSelectedTags();\n  }\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** *****   Back Button Clicked   ***** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n\n  function backButtonClicked() {\n    //console.log('Back Button function fired');\n    // hide back button              \n    $('.g-filters-back-button > div').css('display', 'none'); // show search tags label\n\n    $('.g-search-tags').css('display', 'block');\n    $('.g-search-tags-container').css('display', 'none'); // slide panel\n\n    $('.g-panel').css('margin-left', '-599px'); // console.log('slide panel closed');\n    // show A-Z label\n\n    $('.g-a-z-label').css('display', 'block'); // console.log('hide: az-index az-container');\n\n    $('.az-index').hide();\n    $('.az-container').hide(); // breadcrumb\n\n    $('.g-breadcrumb-container').hide(); // filters\n\n    $('.g-filter-by').css('display', 'block');\n    $('.g-filters-source').hide();\n    $('.g-filters-report').hide();\n    $('.g-filters-geography').hide();\n    $('.g-filters-topic').hide(); // tags\n    // console.log('hide tag container');\n\n    $('#tags-container').hide();\n    $('#tag_categories .bookshelftags').css('display', '');\n  }\n\n  ;\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** ***** Shared Filter-by Clicked **** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  function sharedLabelClicked() {\n    // console.log('update breadcrumb states');\n    $('.node-one').removeClass('g-breadcrumb-active').addClass('g-breadcrumb');\n    $('.node-two').removeClass('g-breadcrumb').addClass('g-breadcrumb-active').show(); //$('.overlay-reports-title').hide();\n    //$('.overlay-selected-tags-container').hide();\n\n    $('.node-thr').text(''); // console.log('hide filters');\n\n    $('.g-filter-by').hide();\n    $('.g-filters-source').hide();\n    $('.g-filters-report').hide();\n    $('.g-filters-geography').hide();\n    $('.g-filters-topic').hide(); // console.log('slide panel open');\n\n    $('.g-panel').animate({\n      margin: '0'\n    });\n    $('.g-panel').css('width', windowWidth); // console.log('measure slide panel height');\n\n    $('.g-panel').css('height', scrollArea);\n    $('.g-panel').css('overflow', 'scroll');\n    $('.g-panel').show(); // console.log('show tags container');\n\n    $('#tags-container').show(); // console.log('show categories');\n\n    $('#tag_categories').show();\n    $('#tag_categories .bookshelftags').css('display', ''); // console.log('hide tags');\n\n    $('#inner-tags-container').hide();\n    $('#tags').hide();\n    setTimeout(updateBreadcrumb, 500);\n  }\n\n  ;\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** ***** Shared Filter-by Clicked **** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  function reportLabelClicked() {\n    // console.log('update breadcrumb states');\n    $('.node-one').removeClass('g-breadcrumb-active').addClass('g-breadcrumb');\n    $('.node-two').removeClass('g-breadcrumb').addClass('g-breadcrumb-active').show(); // console.log('show categories');\n\n    $('#tag_categories').show();\n    $('#tag_categories .bookshelftags').css('display', ''); //$('.overlay-reports-title').css('display','');\n    //$('.overlay-selected-tags-container').css('display','');\n\n    console.log('#6 Test if selected tags are visible.');\n    checkSelectedTags();\n    $('.node-thr').text(''); // console.log('hide filters');\n\n    $('.g-filter-by').hide();\n    $('.g-filters-source').hide();\n    $('.g-filters-report').hide();\n    $('.g-filters-geography').hide();\n    $('.g-filters-topic').hide(); // console.log('slide panel open');\n\n    $('.g-panel').animate({\n      margin: '0'\n    });\n    $('.g-panel').css('width', windowWidth); // console.log('measure slide panel height');\n\n    $('.g-panel').css('height', scrollArea);\n    $('.g-panel').css('overflow', 'scroll');\n    $('.g-panel').show(); // console.log('show tags container');\n\n    $('#tags-container').show(); // console.log('show categories');\n\n    $('#tag_categories').show();\n    $('#tag_categories .bookshelftags').css('display', ''); // console.log('hide tags');\n\n    $('#inner-tags-container').hide();\n    $('#tags').hide();\n    setTimeout(updateBreadcrumb, 500);\n  }\n\n  ;\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** ***** ** update breadcrumb ** ***** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  function updateBreadcrumb() {\n    // console.log('update breadcrumb label');\n    var sourceFilters = $('h4[data-category=all-sources]');\n    var sourceFiltersVisible = $(sourceFilters).is(\":visible\"); // console.log('source : ' + sourceFiltersVisible + ' so hide selected tags wrapper');\n\n    var reportFilters = $('#tags-holder[data-filter=report]');\n    var reportFiltersVisible = $(reportFilters).is(\":visible\"); // console.log('report : ' + reportFiltersVisible + ' so show selected tags if there is any');\n\n    var geographyFilters = $('h4[data-category=country-international]');\n    var geographyFiltersVisible = $(geographyFilters).is(\":visible\"); // console.log('geography : ' + geographyFiltersVisible + ' so hide selected tags wrapper');\n\n    var topicFilters = $('h4[data-category=capacity]');\n    var topicFiltersVisible = $(topicFilters).is(\":visible\"); // console.log('topic : ' + topicFiltersVisible + ' so hide selected tags wrapper');\n\n    if (sourceFiltersVisible == true) {\n      $('.node-two').text('Fuel source');\n      $('.overlay-selected-tags-container').hide();\n    } else if (reportFiltersVisible == true) {\n      $('.node-two').text('Reports');\n      $('.overlay-selected-tags-container').show();\n    } else if (geographyFiltersVisible == true) {\n      $('.node-two').text('Geography');\n      $('.overlay-selected-tags-container').hide();\n    } else if (topicFiltersVisible == true) {\n      $('.node-two').text('Subject');\n      $('.overlay-selected-tags-container').hide();\n    }\n    /*\r\n    var self = $('#tags-holder');\r\n    var $self = $(self);\r\n    var dataFunction = $self.attr('data-filter');\r\n    \t\tswitch (dataFunction) {\r\n    case 'source':\r\n    \t// console.log(\"---SOURCE---\")\r\n    \tbreak;\r\n    case 'report':\r\n    \t// console.log(\"---REPORT---\")\r\n    \tbreak;\r\n    case 'geography':\r\n    \t// console.log(\"---GEOGRAPHY---\")\r\n    \tbreak;\r\n    case 'topic':\r\n    \t// console.log(\"---TOPIC---\")\r\n    \tbreak;\r\n    default:\r\n    \t// console.log(\"---DO NOTHING---\")\r\n    \tbreak;\r\n    }\r\n    */\n\n\n    $('#tag_categories').show();\n    $('#tag_categories .bookshelftags').css('display', ''); // console.log('--------------end--------------');\n  }\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** *****    Filter by Clicked    ***** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n\n  function functionFilterByLinkClicked() {\n    // console.log('-----------filter-by-----------');\n    // console.log('display back button');\n    $('.g-filters-back-button > div').css('display', 'inline-block'); // console.log('hide search label & container');\n\n    $('.g-search-tags').hide();\n    $('.g-search-tags-container').hide(); // console.log('hide a-z label & container');\n\n    $('.g-a-z-label').hide(); // console.log('hide: az-index az-container');\n\n    $('.az-index').hide();\n    $('.az-container').hide(); // console.log('show breadcrumb');\n\n    $('.g-breadcrumb-container').css('display', 'table');\n    $('.node-one').removeClass('g-breadcrumb').addClass('g-breadcrumb-active');\n    $('.node-two').text('').removeClass('g-breadcrumb', 'g-breadcrumb-active').hide();\n    $('.node-thr').text(''); //.removeClass('g-breadcrumb-active').hide();\n    // console.log('show filters');\n\n    $('.g-filter-by').hide();\n    $('.g-filters-source').css('display', 'block');\n    $('.g-filters-report').css('display', 'block');\n    $('.g-filters-geography').css('display', 'block');\n    $('.g-filters-topic').css('display', 'block'); // console.log('slide panel open');\n\n    $('.g-panel').animate({\n      margin: '0'\n    });\n    $('.g-panel').css('width', windowWidth); // console.log('measure slide panel height');\n\n    $('.g-panel').css('height', scrollArea);\n    $('.g-panel').css('overflow', 'scroll');\n    $('.g-panel').show(); // console.log('hide ALL tags');\n\n    $('#tags-container').hide();\n    $('#inner-tags-container').hide();\n    $('#tags').hide();\n    $('#tag_categories').hide(); // console.log('--------------end--------------');\n  }\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** *****       A-Z Clicked       ***** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n\n  function aZButtonClicked() {\n    //console.log('A-Z  function fired');\n    // back button\n    $('.g-filters-back-button > div').css('display', 'inline-block'); // search tags\n\n    $('.g-search-tags').hide();\n    $('.g-search-tags-container').hide(); // a-z\n\n    $('.g-a-z-label').hide(); // console.log('show: az-index az-container');\n\n    $('.az-index').show();\n    $('.az-container').show(); // console.log('hide breadcrumb');\n\n    $('.g-breadcrumb-container').hide(); // console.log('hide filters');\n\n    $('.g-filter-by').hide();\n    $('.g-filters-source').hide();\n    $('.g-filters-report').hide();\n    $('.g-filters-geography').hide();\n    $('.g-filters-topic').hide(); // console.log('slide panel open');\n\n    $('.g-panel').animate({\n      margin: '0'\n    });\n    $('.g-panel').css('width', windowWidth); // console.log('measure slide panel height');\n\n    $('.g-panel').css('height', scrollArea);\n    $('.g-panel').css('overflow', 'scroll');\n    $('.g-panel').show(); // console.log('show tags container');\n\n    $('#tags-container').show();\n    $('#tags-holder').show();\n    $('#inner-tags-container').show(); //$('#inner-tags-container').attr('data-filter', 'all');\n    // console.log('--------------end--------------');\n  }\n\n  ;\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** *****      Search Clicked     ***** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  function searchButtonClicked() {\n    //console.log('Search function fired');\n    // back button\n    $('.g-filters-back-button > div').css('display', 'inline-block'); // search tags\n\n    $('.g-search-tags').css('display', 'none');\n    $('.g-search-tags-container').css('display', 'inline-block'); // console.log('slide panel open');\n\n    $('.g-panel').animate({\n      margin: '0'\n    });\n    $('.g-panel').css('width', windowWidth); //console.log('measure slide panel height');\n    //$('.g-panel').css('height', scrollArea);\n    //$('.g-panel').css('overflow', 'scroll');\n\n    $('.g-panel').show(); //.css('display', 'block');\n    // console.log('hide breadcrumb');\n\n    $('.g-breadcrumb-container').hide(); // console.log('hide filters');\n\n    $('.g-filter-by').hide();\n    $('.g-filters-source').hide();\n    $('.g-filters-report').hide();\n    $('.g-filters-geography').hide();\n    $('.g-filters-topic').hide(); // console.log('show tag container');\n\n    $('#tags-container').show(); // console.log('hide tags');\n\n    $('#tags-holder').hide(); //console.log('hide tags');\n    //$('#inner-tags-container').hide();\n    //$('#tags').hide();\n    //$('#tag_categories').show();\n\n    if ($('.g-search-tags-container').css('display') == 'inline-block') {\n      //console.log(\"Search box is displayed\");\n      // a-z\n      $('.g-a-z-label').hide(); // console.log('hide: az-index az-container');\n\n      $('.az-index').hide();\n      $('.az-container').hide();\n    } // console.log('--------------end--------------');\n\n  }\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n  /* ***** ***** *** Check Selected Tags Onload **** ***** ***** */\n\n  /* ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** */\n\n\n  function mobileOnly() {\n    // console.log('----------mobile only----------');\n    // console.log('update breadcrumb');\n    var breadcrumbNodeTwo = $('.node-two');\n    var breadcrumbNodeThree = $('.node-thr');\n    $('.g-filter-sub-category').css('visibility', 'visible');\n    $('.g-filter-sub-category').css('border', '5px solid green'); // console.log('hide categories');\n\n    $('#tag_categories').hide();\n    $('#tag_categories .bookshelftags').hide(); // console.log('show tags');\n\n    $('#inner-tags-container').show();\n    $('#tags').show(); //$('.overlay-reports-title').css('display','');\n    //$('.overlay-selected-tags-container').css('display','');\n\n    console.log('#7 Test if selected tags are visible.');\n    checkSelectedTags();\n    breadcrumbNodeThree.text($('li[style*=\"list-item\"] h4[data-category]').text());\n    breadcrumbNodeTwo.removeClass('g-breadcrumb-active').addClass('g-breadcrumb'); // console.log('--------------end--------------');\n  }\n})(); // Helper function to format the report ID in a report row\n\n\nfunction formatReportID(report) {\n  return '';\n}\n\n//# sourceURL=webpack:///./app/assets/scripts/modules/reports/reports.js?");

/***/ }),

/***/ "./app/assets/scripts/reports.js":
/*!***************************************!*\
  !*** ./app/assets/scripts/reports.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_reports_reports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/reports/reports.js */ \"./app/assets/scripts/modules/reports/reports.js\");\n/* harmony import */ var _modules_reports_reports_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_reports_reports_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n//# sourceURL=webpack:///./app/assets/scripts/reports.js?");

/***/ })

/******/ });