define("viewStack",["classy"],function(Class){return Class.$extend({__init__:function(container){this.container=container,this.viewNames=[],this.viewsMap={}},addView:function(name,view){return view||(view=$("<div/>").attr("id",name)),this.container.append(view),this.viewNames.push(name),this.viewsMap[name]=view,this.viewNames.length==1?this.setActiveView(name):this.positionView(view,!1),view},removeView:function(name){if(this.viewsMap.hasOwnProperty(name)){var view=this.viewsMap[name];delete this.viewsMap[name],this.viewNames.splice($.indexOf(this.viewNames,name),1),view.remove(),this.activeName==name&&this.viewNames.length>0&&this.setActiveView(this.viewNames[0])}},getView:function(name){return this.viewsMap[name]},hasView:function(name){return name in this.viewsMap},setActiveView:function(name){if(name==this.activeName)return;if(!(name in this.viewsMap))throw new Error("Invalid View Name");this.activeName=name;for(var key in this.viewsMap)if(this.viewsMap.hasOwnProperty(key)){var view=this.viewsMap[key];this.positionView(view,key==name)}},positionView:function(view,active){view.css({display:active?"block":"none"})}})})